@page "/"

@using System.ComponentModel.DataAnnotations;
@using WebComponents.Components.Controls.GroupPanel
@using WebComponents.Components.Controls.Radio
@using WebComponents.Components.Controls.TextBox;
@using WebComponents.Components.Controls.Button;
@using WebComponents.Components.Controls.Switch;
@using WebComponents.Components.Controls.Checkbox;

<EditForm Model="@ProfileInfo" FormName="fname" 
                                OnInvalidSubmit="OnInValidSubmit" 
                                OnValidSubmit="ValidSubmit"> 

    <DataAnnotationsValidator />    

<div style="padding-left: 20px;margin-top:25px;">

    <RTextbox style="{width:200px;}" 
        LabelText="Enter Username"        
        PlaceholderText="Username"   

        ValueExpression="()=> ProfileInfo.User.textValue"        
        @bind-value="ProfileInfo.User.textValue">
    </RTextbox>

    <ValidationMessage style="color: blueviolet;" For="(()=> ProfileInfo.User.textValue)"/> 

    <br />

    <RTextbox TextboxStyle="width:200px;" 
        LabelText="Enter Password"        
        PlaceholderText="Password" 
        IsPasswordBox=true         

        ValueExpression="()=> ProfileInfo.User.pass"
        @bind-value="ProfileInfo.User.pass">
    </RTextbox>

    <ValidationMessage style="color:blueviolet" For="(()=> ProfileInfo.User.pass)"/> 

    <br />

    <RSwitch ValueExpression="()=> ProfileInfo.IsTenthPass" DisplayLabel="Is Tenth Pass" 
        @bind-value="@ProfileInfo.IsTenthPass"></RSwitch>
    
    <RSwitch ValueExpression="()=> ProfileInfo.IsCricket" SwitchBackColor="pink" DisplayLabel="Is Graduate" 
        @bind-value="@ProfileInfo.IsCricket"></RSwitch>
        
    <ValidationMessage style="color:blueviolet" For="(()=> ProfileInfo.IsCricket)" />
    <br />
    <RCheckbox LabelStyle="color:blue" DisplayText="Is Cricket" 
        ValueExpression="()=> ProfileInfo.IsCricket" 
        @bind-value="@ProfileInfo.IsCricket"></RCheckbox>
    <ValidationMessage style="color:blueviolet" For="(()=> ProfileInfo.IsCricket)" />
    <br />

    <RCheckbox LabelStyle="color:blue" DisplayText="Is Tennis" 
        ValueExpression="()=> ProfileInfo.IsTennis" OnChecked="TennisSelected"
             @bind-value="@ProfileInfo.IsTennis"></RCheckbox>
    <ValidationMessage style="color:blueviolet" For="(()=> ProfileInfo.IsTennis)" />
    <br />

    <RCheckbox LabelStyle="color:blue" DisplayText="Is Volleyball" 
        ValueExpression="()=> ProfileInfo.IsVolleyball" 
          @bind-value="@ProfileInfo.IsVolleyball"></RCheckbox>
    <ValidationMessage style="color:rgba(108, 65, 148, 0.616)" For="(()=> ProfileInfo.IsVolleyball)" />
    <br />        
        
    <RGroupPanel ContentStyle="width:330px" GroupName="Sports" 
                 LabelStyle="color:purple;" IsItemsArrangeHorizontal="true">
        <Content>
                     
            <RRadio LabelStyle="color:blue" DisplayText="Is Baseball" 
                GroupName="sports"
                ValueExpression="()=> ProfileInfo.IsBaseball" 
                @bind-value="@ProfileInfo.IsBaseball"></RRadio>                        

            <RRadio LabelStyle="color:blue" DisplayText="Is Football" 
                GroupName="sports"
                ValueExpression="()=> ProfileInfo.IsFootball" 
                    @bind-value="@ProfileInfo.IsFootball"></RRadio>            
            
            <RRadio LabelStyle="color:blue" DisplayText="Is Hockey" 
                GroupName="sports"
                ValueExpression="()=> ProfileInfo.IsHockey" 
                @bind-value="@ProfileInfo.IsHockey"></RRadio>
                         
        </Content>
    </RGroupPanel>

    <br/>
    <RButton ButtonType="submit">
        <Content>Submit</Content>
    </RButton>

    <RButton BackgroundColor="orange" ButtonType="RButtonType.Button" ButtonClick="(e) => ClearForm(e)">
        <Content>Clear</Content>
    </RButton>

    </div>

 </EditForm> 
    
<br/>
UserName : @ProfileInfo?.User?.textValue <br />
Password : @ProfileInfo?.User?.pass <br />
Tenth Pass: @ProfileInfo?.IsTenthPass <br />
IsCricket : @ProfileInfo?.IsCricket <br/>
IsTennis : @ProfileInfo?.IsTennis <br/>
IsVolleyBall : @ProfileInfo?.IsVolleyball <br />

IsBaseball : @ProfileInfo?.IsBaseball <br/>
IsFootball : @ProfileInfo?.IsFootball <br/>
IsHockey : @ProfileInfo?.IsHockey <br />

<br />





@code {

    private EditContext? context;    

    public Profile ProfileInfo {get; set; } = new Profile() {IsTenthPass = true};

    protected override void OnInitialized() {
       this.context = new (ProfileInfo);
    }

    private void ClearForm(RButtonEventArgs e)
    {
        this.ProfileInfo.User.textValue = "";
        this.ProfileInfo.User.pass = "";
        this.ProfileInfo.IsTenthPass = null;
    }

    private void TennisSelected()
    {
        
    }

    private void SubmitForm(EditContext context)
    {

    }

    private void OnInValidSubmit()
    {

    }

    private void ValidSubmit()
    {
        
    }

    public void focusIn(FocusEventArgs e)
    {

    }

    public void focusOut(FocusEventArgs e)
    {

    }

}    

@code {

    public class UserInfo
    {
        [Required(ErrorMessage = "please enter username!!!")]
        public string textValue { get; set; }

        [Required(ErrorMessage = "please enter password!!!")]
        public string pass { get; set; }        

    }

    public class Profile 
    {
        [Required(ErrorMessage ="Please enter Tenth pass or not")]
        public bool? IsTenthPass {get; set;}

        public UserInfo User {get; set; } = new UserInfo();

        [Required(ErrorMessage ="Please enter playing Cricket or not")]
        public bool? IsCricket {get;set;}

        [Required(ErrorMessage ="Please enter playing volleyball or not")]
        public bool? IsVolleyball {get; set;}

        [Required(ErrorMessage ="Please enter playing tennis or not")]
        public bool? IsTennis {get;set;}

        
        [Required(ErrorMessage ="Please enter playing IsBaseball or not")]
        public bool? IsBaseball {get;set;}

        [Required(ErrorMessage ="Please enter playing Football or not")]
        public bool? IsFootball {get; set;}

        [Required(ErrorMessage ="Please enter playing Hockey or not")]
        public bool? IsHockey {get;set;}
    }
}